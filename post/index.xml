<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on SnowDeer&#39;s Programming Holic</title>
    <link>http://snowdeer.github.io/post/</link>
    <description>Recent content in Posts on SnowDeer&#39;s Programming Holic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2016 Copyright Text</copyright>
    <lastBuildDate>Wed, 03 Aug 2016 21:20:23 +0900</lastBuildDate>
    <atom:link href="http://snowdeer.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>정적 웹페이지 vs 동적 웹페이지</title>
      <link>http://snowdeer.github.io/2016/08/03/2016-08-03-introducing-hugo/</link>
      <pubDate>Wed, 03 Aug 2016 21:20:23 +0900</pubDate>
      
      <guid>http://snowdeer.github.io/2016/08/03/2016-08-03-introducing-hugo/</guid>
      <description>

&lt;p&gt;정적인 웹페이지를 생성시켜주는 툴인 &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;를 소개하고자 한다.
그러기에 앞서 정적 웹페이지가 어떤 것인지를 먼저 설명하면,&lt;/p&gt;

&lt;h1 id=&#34;정적-웹페이지-vs-동적-웹페이지&#34;&gt;정적 웹페이지 vs 동적 웹페이지&lt;/h1&gt;

&lt;p&gt;이름에서 눈치를 챌 수 있듯이 사용자의 인터랙션에 따라 웹페이지가 바뀌어가는 것을 동적 웹페이지,
그렇지 않고 항상 같은 내용을 보여주는 웹페이지를 정적 웹페이지라고 한다.&lt;/p&gt;

&lt;p&gt;흔히 말하는 블로그 서비스들인 &lt;a href=&#34;http://www.tistory.com/&#34;&gt;티스토리&lt;/a&gt;나
&lt;a href=&#34;http://section.blog.naver.com/&#34;&gt;네이버 블로그&lt;/a&gt;는 동적 웹페이지로 이루어져 있다.
블로그 사이트에서 새로운 글도 작성할 수 있고, 알림, 통계 등 화려하고 다양한 기능들을 제공해준다.&lt;/p&gt;

&lt;p&gt;하지만 정적 웹페이지는 단순히 사이트 관리자가 미리 만들어놓은 웹페이지를 볼 수만 있다.
게다가 관리도 힘들다. 새 글을 쓰거나 수정하거나 할 때도 모두 수동으로 해야 한다.&lt;/p&gt;

&lt;p&gt;하지만, 이렇게 단점이 많은데도 정적 웹페이지 방식을 선택한 이유는&lt;/p&gt;

&lt;h1 id=&#34;정적-웹페이지의-장점&#34;&gt;정적 웹페이지의 장점&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;동적인 요소가 없기 때문에 DB 서버 등이 필요없고, 구축이 쉽다.&lt;/li&gt;
&lt;li&gt;단순 문서로만 이루어져 있어서 서버간 통신이 거의 없고 속도가 빠르다.&lt;/li&gt;
&lt;li&gt;정적인 문서들로만 이루어져 있기 때문에 어떤 호스팅 서버에서도 동작할 수 있다.&lt;/li&gt;
&lt;li&gt;일반 텍스트 에디터기에서 문서를 작성할 수 있다. (문서 작성에 익숙한 에티터기를 사용할 수 있다.
대신 단점이기도 하다. 이미지 삽입 등의 작업이 번거롭다.)&lt;/li&gt;
&lt;li&gt;백업, 복원이 쉽다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;와 같은 장점이 있기 때문이다.
블로그 용도로는 정적 웹페이지의 장점들이 단점들을 충분히 커버할 정도로 매력적이다.&lt;/p&gt;

&lt;h1 id=&#34;정적-웹페이지-플랫폼&#34;&gt;정적 웹페이지 플랫폼&lt;/h1&gt;

&lt;p&gt;이미 수백 개의 정적 웹페이지 플랫폼들이 존재한다.
그 중에서 대표적인 플랫폼으로 &lt;a href=&#34;https://github.com/jekyll/jekyll&#34;&gt;Jekyll&lt;/a&gt;이나
&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; 등이 있다.&lt;/p&gt;

&lt;p&gt;이 블로그는 &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;로 만들어졌으며,
그 외의 다른 플랫폼들도 구경하고 싶으면 &lt;a href=&#34;https://staticsitegenerators.net/&#34;&gt;여기&lt;/a&gt;에서 확인 할 수 있다.
(평점으로 정렬하면 각 플랫폼의 평가도 확인할 수 있다. Hugo는 3위에 위치하고 있다.)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Windows 10 설치 후 해야 할 일</title>
      <link>http://snowdeer.github.io/2016/07/21/2016-07-21-windows10-setup/</link>
      <pubDate>Thu, 21 Jul 2016 19:32:23 +0900</pubDate>
      
      <guid>http://snowdeer.github.io/2016/07/21/2016-07-21-windows10-setup/</guid>
      <description>

&lt;p&gt;윈도우 10을 사용하고 나서 초기화를 벌써 수 차례 진행하면서
설치시 필요한 것들을 간단히 적어보았다.
참고로 이 글은 지극히 개인적인 메모 용도로 작성한 글이다.&lt;/p&gt;

&lt;h1 id=&#34;windows-업데이트-드라이버-업데이트&#34;&gt;Windows 업데이트 &amp;amp; 드라이버 업데이트&lt;/h1&gt;

&lt;p&gt;너무나 당연한 일이다. 최우선적으로 하자.
화면 우측 슬라이딩 메뉴에서 &amp;lsquo;모든 설정 → 업데이트 및 복구&amp;rsquo;를 선택하자.&lt;/p&gt;

&lt;h1 id=&#34;불필요한-어플-삭제&#34;&gt;불필요한 어플 삭제&lt;/h1&gt;

&lt;p&gt;윈도우 10을 설치해보면 불필요한 어플들이 기본적으로 많이 설치되어 있다.
(대기업 노트북이라 그런 줄 알았는데, Surface Pro도 마찬가지였음.)
불필요한 어플들은 삭제하도록 하자&lt;/p&gt;

&lt;p&gt;화면 우측 슬라이딩 메뉴에서 &amp;lsquo;모든 설정 → 시스템 → 앱 및 기능&amp;rsquo;을 선택하면 아래 이미지와 같이
각 어플들을 선택해서 삭제할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snowdeer.github.io/2016-07-21-windows10-setup/20160806_082038.png&#34; alt=&#34;image -fullwidth&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;삭제되지-않는-어플-삭제&#34;&gt;삭제되지 않는 어플 삭제&lt;/h1&gt;

&lt;p&gt;위의 과정에서 삭제되지 않는 어플들이 있다. (ex. 원노트)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snowdeer.github.io/2016-07-21-windows10-setup/20160806_082218.png&#34; alt=&#34;image -fullwidth&#34; /&gt;&lt;/p&gt;

&lt;p&gt;이런 경우에는 관리자 권한으로 삭제를 해줘야 한다.&lt;/p&gt;

&lt;p&gt;일단, 파워쉘을 관리자 권한으로 실행하자.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snowdeer.github.io/2016-07-21-windows10-setup/20160806_124830.png&#34; alt=&#34;image -fullwidth&#34; /&gt;&lt;/p&gt;

&lt;p&gt;그런 다음 다음 명령어로 원노트의 패키지 이름을 확인하자.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Get-AppxPackage -AllUsers&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;으로 현재 설치되어 있는 전체 어플의 이름을 확인할 수도 있고,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Get-AppxPackage -AllUsers &lt;em&gt;OneNote&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;로 필터링을 이용해 검색을 할 수도 있다.&lt;/p&gt;

&lt;p&gt;마지막으로, 어플의 이름을 확인했으면, 삭제를 하자.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Get-AppxPackage -AllUsers Microsoft.Office.OneNote | Remove-AppxPackage&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;키보드-재입력-시간-조절&#34;&gt;키보드 재입력 시간 조절&lt;/h1&gt;

&lt;p&gt;지극히 개인적인 설정이다. 개인적으로 키보드 재입력 시간에 딜레이가 있으면 답답함을 많이 느낀다.
(아무래도 코딩이나 글쓰기 작업을 많이 하다 보니&amp;hellip;)&lt;/p&gt;

&lt;p&gt;&amp;lsquo;제어판 → 키보드&amp;rsquo;로 가서 딜레이를 조절하자.&lt;/p&gt;

&lt;h1 id=&#34;jdk-설치&#34;&gt;JDK 설치&lt;/h1&gt;

&lt;p&gt;역시나 개인적인 단계이다. Java 기반의 어플들을 설치하거나 실행할 때 JDK가 필요한 경우가
많아서 (대표적인 예로 Eclipse) 아예 미리 설치해 버리는게 편하다.
개발용 PC에는 보통 필수적인 설치 !!&lt;/p&gt;

&lt;h1 id=&#34;필요한-어플-설치&#34;&gt;필요한 어플 설치&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bandisoft.co.kr/bandizip/&#34;&gt;반디집&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.co.kr/chrome/browser/desktop/&#34;&gt;크롬&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.dropbox.com/ko/downloading&#34;&gt;DropBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://agilebits.com/downloads&#34;&gt;1Password&lt;/a&gt; : 비밀번호 관리 어플(유료)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sublimetext.com/&#34;&gt;Sublime Text&lt;/a&gt; : 텍스터 에디터기(유료)&lt;/li&gt;
&lt;li&gt;MS Office 2016 : 오피스(유료)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://support.logitech.com/en_us/software/setpoint&#34;&gt;SetPoint&lt;/a&gt; : Logitech 키보드 &amp;amp; 마우스 설정 어플&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.visualstudio.com/ko-kr/products/visual-studio-community-vs.aspx&#34;&gt;Visual Studio Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://eclipse.org/downloads/&#34;&gt;Eclipse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://desktop.github.com/&#34;&gt;GitHub Desktop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://snowdeer.github.io/2016/03/01/about/</link>
      <pubDate>Tue, 01 Mar 2016 21:06:45 +0900</pubDate>
      
      <guid>http://snowdeer.github.io/2016/03/01/about/</guid>
      <description>

&lt;p&gt;안녕하세요. 프로그래밍을 좋아하는 평범한 S/W 개발자 snowdeer 입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snowdeer.github.io/about/about.jpg&#34; alt=&#34;Introducing My Family -fullwidth&#34; /&gt;&lt;/p&gt;

&lt;p&gt;개발자의 길을 걸어온 지도 어느새 15년이 넘었군요. 그럼에도 불구하고 여전히 공부할 것도 많고,
모르는 것도 많고 실수도 많습니다. 하지만 새로운 것을 배워가고 익혀나가는 것 또한 즐겁습니다 !!&lt;/p&gt;

&lt;p&gt;어린 시절엔 왜 공부를 하지 않았었는지&amp;hellip; ㅜ_ㅜ;;;&lt;/p&gt;

&lt;p&gt;요즘 관심 가는 분야는 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Algorithm&lt;/li&gt;
&lt;li&gt;Design Pattern&lt;/li&gt;
&lt;li&gt;Android Development&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;안드로이드 어플리케이션 개발만 5년 정도 되어가다보니 Java가 가장 편리합니다만,
업무상 어쩔 수 없이 C++도 같이 혼용해서 사용해야 할 상황이 되었습니다.
그래서 이왕 다시 C++ 공부를 해야 하는 김에 좀 더 업그레이드된
&lt;a href=&#34;https://ko.wikipedia.org/wiki/C%2B%2B11&#34;&gt;C++11&lt;/a&gt;을 공부하면서 C++ 환경에 적응하기로 마음 먹었습니다.&lt;/p&gt;

&lt;h1 id=&#34;career&#34;&gt;Career&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;컴퓨터 과학 학부 및 대학원 졸업&lt;/li&gt;
&lt;li&gt;3D Computer Graphics 전공(석사)&lt;/li&gt;
&lt;li&gt;C2Technology (2000~2003, 의료 정보 솔루션 업체, 병역특례)&lt;/li&gt;
&lt;li&gt;Samsung Electronics (2007~)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
